{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/extend/add-context","result":{"data":{"mdx":{"id":"2b575a1c-8115-549d-a02f-6c01276b7e31","excerpt":"The context is one of the most important concepts to understand in wp-lemon. Think of the context as the set of variables that are passed to your Twig templateâ€¦","fields":{"slug":"/extend/add-context/"},"frontmatter":{"title":"Add global context","description":"Learn how to add global context the wp-lemon way.","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Add global context\",\n  \"description\": \"Learn how to add global context the wp-lemon way.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The context is one of the most important concepts to understand in wp-lemon. Think of the context as the set of variables that are passed to your Twig template, whether this is a template, component or even a block.\"), mdx(\"p\", null, \"By default wp-lemon prepares and adds quite a few element to the global context:\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Key\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"env\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Holds the environment version: development, staging or production\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"logo\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"array\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"By default holds header and footer logos and their uri's, width and height.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"pages\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"array\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Holds the important pages in wp-lemon as well as the archive pages that can be set via the customizer. Also holds the special pages you define yourself. \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/wp-lemon-docs/extend/special-pages\"\n  }, \"Lean more about special pages\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"socials\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"array\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns all the socials links set in the customizer and their labels, names, url and icons.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"contact\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"array\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns phonenumer and whatsapp number in a variety of formats. As well as the e-mail address.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"nav\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"array\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns primary, footer, multilanguage menus. As well as nav.back on single pages to return to the archive page.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"google_api_key\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Google api key\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"contact_buttons\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"array\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Context for floating buttons on the bottom left of the page.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"child_theme_author\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"array\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"returns name and url of the child theme author set in style.css\")))), mdx(\"p\", null, \"There are two ways you can alter the context:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"by overriding parent methods inside your \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"WP_Lemon_Child_Site\"), \" class.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Adding additional methods to your \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"WP_Lemon_Child_Site\"), \" class and adding them to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"WP_Lemon_Child_Site::extend_site_information()\"))), mdx(\"h2\", {\n    \"id\": \"overriding-parent-methods-inside-your-wp_lemon_child_site-class\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#overriding-parent-methods-inside-your-wp_lemon_child_site-class\",\n    \"aria-label\": \"overriding parent methods inside your wp_lemon_child_site class permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Overriding parent methods inside your WP_Lemon_Child_Site class.\"), mdx(\"p\", null, \"In the example below we add the get_navs method to the child class, call the parent method so we have that context as well, and then expanding the property. In this example you could use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nav.primary\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nav.secondary\"), \" to get the new nav menus.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\"\n  }, \"    protected static function get_navs(): array\\n    {\\n        parent::get_navs();\\n\\n        static::$menus['primary'] = wp_nav_menu(\\n            [\\n                'echo'           => false,\\n                'theme_location' => 'primary_navigation',\\n                'menu_class'     => 'navbar-nav',\\n                'depth'          => 1,\\n                'container'      => false,\\n            ]\\n        );\\n\\n        static::$menus['secondary'] = wp_nav_menu(\\n            [\\n                'echo'           => false,\\n                'theme_location' => 'secondary_navigation',\\n                'menu_class'     => 'navbar-nav',\\n                'depth'          => 1,\\n                'container'      => false,\\n            ]\\n        );\\n\\n        return static::$menus;\\n    }\\n\")), mdx(\"h2\", {\n    \"id\": \"adding-additional-methods-to-your-wp_lemon_child_site-class\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#adding-additional-methods-to-your-wp_lemon_child_site-class\",\n    \"aria-label\": \"adding additional methods to your wp_lemon_child_site class permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Adding additional methods to your WP_Lemon_Child_Site class\"), mdx(\"p\", null, \"In the following example we will extend the global context to add a 'label' to use in templates that holds the current page title or title of the archive page for single pages.\"), mdx(\"p\", null, \"We first create our method builds the context and returns it.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\"\n  }, \"    public function add_label_context()\\n    {\\n        $label = false;\\n        // if is front page, return\\n        if (is_front_page()) {\\n            return false;\\n        }\\n\\n        if (is_page()) {\\n            $label = get_the_title();\\n        } else if (self::is_post_type(['job', 'news', 'case'])) {\\n            $label = WP_Lemon_Child_Site::get_archive_page();\\n            $label = $label['title'];\\n        }\\n\\n        return $label;\\n    }\\n\")), mdx(\"p\", null, \"After that we add it to our extend_site_information method under a convenient key.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\"\n  }, \"\\n    protected function extend_site_information(): array\\n    {\\n        return [\\n            ++ 'nav_label' => $this->add_label_context(),\\n        ];\\n    }\\n\")), mdx(\"p\", null, \"We can now use it inside twig files like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-twig\"\n  }, \"{% if nav_label %}\\n    <div class=\\\"nav-label\\\">\\n        <span>{{ nav_label }}</span>\\n    </div>\\n{% endif %}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Overriding parent methods inside your WP_Lemon_Child_Site class."},{"depth":2,"value":"Adding additional methods to your WP_Lemon_Child_Site class"}]}},"pageContext":{"slug":"/extend/add-context/","prev":{"label":"Innerblocks","link":"/blocks/innerblocks"},"next":{"label":"Posttypes & taxonomies","link":"/extend/add-models"},"repositoryEditUrl":"https://github.com/Studio-Lemon/wp-lemon-docs/tree/master/src/docs/extend/add-context.mdx","repositoryProvider":"GitHub"}},"staticQueryHashes":["1954253342","2328931024","2501019404","973074209"]}