{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/extend/customizer-fields","result":{"data":{"mdx":{"id":"d5cb1665-18ae-54e6-9cad-d93fbc8c6be6","excerpt":"What are customizer fields? Customizer fields in WordPress refer to the settings and controls available in the WordPress Customizer.\nThe Customizer is anâ€¦","fields":{"slug":"/extend/customizer-fields/"},"frontmatter":{"title":"Customizer fields","description":"How and why to use an customizer fields in wp-lemon","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Customizer fields\",\n  \"description\": \"How and why to use an customizer fields in wp-lemon\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"what-are-customizer-fields\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#what-are-customizer-fields\",\n    \"aria-label\": \"what are customizer fields permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"What are customizer fields?\"), mdx(\"p\", null, \"Customizer fields in WordPress refer to the settings and controls available in the WordPress Customizer.\\nThe Customizer is an integral part of Worppress, providing a user-friendly interface for adjusting various\\naspects of your website without requiring any coding knowledge.\\nYou can imagine that this is really useful for your clients.\\nNow, with wp-lemon you can easily add your own customizer fields.\"), mdx(\"h2\", {\n    \"id\": \"examples-of-usage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#examples-of-usage\",\n    \"aria-label\": \"examples of usage permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Examples of usage\"), mdx(\"p\", null, \"Custom fields in the WordPress Customizer can be incredibly useful for adding flexible, client-specific features to a website. For example,\\nif you have a client who needs a a unique disclaimer or footer text. By creating a custom field for this purpose,\\nclients can easily update settings like disclaimers, legal notices, cookiebar text or any other text element directly from the WordPress dashboard.\"), mdx(\"p\", null, \"In the code example we've used a bit further down you can see what this would look like in wp-lemon.\"), mdx(\"h2\", {\n    \"id\": \"adding-your-own-customizer-fields-in-wp-lemon\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#adding-your-own-customizer-fields-in-wp-lemon\",\n    \"aria-label\": \"adding your own customizer fields in wp lemon permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Adding your own customizer fields in wp-lemon\"), mdx(\"p\", null, \"Start of by navigating to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"libary/models\"), \", in this folder you can create a new file named \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"customizer.php\"), \".\"), mdx(\"p\", null, \"Now you can add your own custom fields with a setting and control, the setting handles live-previewing, saving, and sanitization of your customizer objects.\\nEach setting is managed by a control object, every control must be associated with a setting,\\nand that setting will save user-entered data from the control to the database (in addition to displaying it in the live-preview and sanitizing it). \"), mdx(\"p\", null, \"Want to take a look yourself at the WordPress documentation for settings and controls? You can do that\\nright \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.wordpress.org/themes/customize-api/customizer-objects/#settings\"\n  }, \"here\"), \".\"), mdx(\"p\", null, \"Below is an example of how this will look in case of making a customizer field for an unique disclaimer text.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\"\n  }, \"\\n<?php\\n\\n/**\\n *Customizer\\n *\\n * @package WordPress\\n * @subpackage WP_Lemon\\\\Child\\n */\\n\\nnamespace WP_Lemon\\\\Child\\\\Models;\\n\\n/**\\n * Register customizer fields via native api.\\n *\\n * @param object $wp_customize  The cutomizer object we are going to extend.\\n * @return void\\n */\\nfunction customize_register($wp_customize)\\n{\\n   $wp_customize->add_section(\\n        'my-custom-section',\\n        [\\n            'title'    => _x('Custom settings', 'Backend - Customizer section title', 'wp-lemon-child'),\\n            'priority' => 30,\\n            'panel'    => 'lemon_customizer',\\n        ]\\n    );\\n\\n   $wp_customize->add_setting(\\n      'disclaimer',\\n      [\\n         'validate_callback' => '',\\n         'sanitize_callback' => 'wp_kses_post',\\n      ]\\n   );\\n\\n   $wp_customize->add_control(\\n      'disclaimer',\\n      [\\n         'label'       => _x('Disclaimer footer text', 'Backend - Customizer field label', 'wp-lemon-child'),\\n         'section'     => '-custom-section',\\n         'type'        => 'textarea',\\n      ]\\n   );\\n}\\nadd_action('customize_register', __NAMESPACE__ . '\\\\\\\\customize_register');\\n\")), mdx(\"p\", null, \"The most important parameter when adding a control is its type \\u2014 this determines what type of UI the Customizer will display.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<input>\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"checkbox\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"textarea\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"radio\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"select\")), mdx(\"p\", null, \"For any input type supported by the html input element, simply pass the type attribute value to the type parameter when adding the control.\\nThis allows support for control types such as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"text\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hidden\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"number\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"range\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"url\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tel\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"email\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"search\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"time\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"date\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"datetime\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"week\"), \", pending browser support.\"), mdx(\"h2\", {\n    \"id\": \"using-your-own-customizer-field\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#using-your-own-customizer-field\",\n    \"aria-label\": \"using your own customizer field permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Using your own customizer field\"), mdx(\"p\", null, \"After adding your content trough the WordPress customizer you can now use the value from your customizer field in any twig file.\\nTo use the disclaimer text example from above this would look like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\"\n  }, \"$disclaimer_text = get_theme_mod('disclaimer') ;\\n\")), mdx(\"p\", null, \"or in a twig file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-twig\"\n  }, \"<p>\\n   {{ get_theme_mod('disclaimer') }}\\n</p>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"What are customizer fields?"},{"depth":2,"value":"Examples of usage"},{"depth":2,"value":"Adding your own customizer fields in wp-lemon"},{"depth":2,"value":"Using your own customizer field"}]}},"pageContext":{"slug":"/extend/customizer-fields/","prev":{"label":"Special pages","link":"/extend/special-pages"},"next":{"label":"Post objects","link":"/extend/post-objects"},"repositoryEditUrl":"https://github.com/Studio-Lemon/wp-lemon-docs/tree/master/src/docs/extend/customizer-fields.mdx","repositoryProvider":"GitHub"}},"staticQueryHashes":["1954253342","2328931024","2501019404","973074209"]}