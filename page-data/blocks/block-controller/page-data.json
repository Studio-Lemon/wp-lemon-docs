{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/blocks/block-controller","result":{"data":{"mdx":{"id":"c4893559-af0e-5ee1-b6b2-2e1b92f2f18c","excerpt":"The block controller is where you'll probably spend most time while developing a custom block. \nThis is where you process any dynamic data and control how yourâ€¦","fields":{"slug":"/blocks/block-controller/"},"frontmatter":{"title":"Block controller","description":"Documentation on the block controller layer.","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Block controller\",\n  \"description\": \"Documentation on the block controller layer.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The block controller is where you'll probably spend most time while developing a custom block.\\nThis is where you process any dynamic data and control how your block behaves based on input from the editor.\\nThe idea is to put all of our logic in here, so that when you're working in the view layer, you only have to focus on creating a beautiful front end.\"), mdx(\"h2\", {\n    \"id\": \"anatomy-of-a-block-controller\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#anatomy-of-a-block-controller\",\n    \"aria-label\": \"anatomy of a block controller permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Anatomy of a block controller\"), mdx(\"p\", null, \"In the block controller you will find 2 methods you can use to expand your block:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"block_context()\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"add_fields()\"))), mdx(\"p\", null, \"The block_context() function is used to query the data from the database and add it to the block context.\"), mdx(\"h2\", {\n    \"id\": \"block-content\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#block-content\",\n    \"aria-label\": \"block content permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Block content\"), mdx(\"p\", null, \"There are two main ways to add content to your block. \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"InnerBlocks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ACF fields\")), mdx(\"p\", null, \"We prefer InnerBlocks over ACF fields because it uses native WordPress functionality.\\nThe reason you might want to use ACF fields is for repeater fields like slides or testimonials.\\nBelow we'll show you how to use both methods.\"), mdx(\"h3\", {\n    \"id\": \"innerblocks\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#innerblocks\",\n    \"aria-label\": \"innerblocks permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"InnerBlocks\"), mdx(\"p\", null, \"InnerBlocks are blocks within blocks. This way you can create complex blocks with multiple child blocks.\\nThis gives the user a lot of control over the layout of the block.\\nTo learn how to use InnerBlocks, take a look at the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/wp-lemon-docs/blocks/innerblocks\"\n  }, \"InnerBlocks documentation\"), \".\"), mdx(\"h3\", {\n    \"id\": \"adding-acf-fields-to-the-block\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#adding-acf-fields-to-the-block\",\n    \"aria-label\": \"adding acf fields to the block permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Adding ACF fields to the block\"), mdx(\"p\", null, \"You can add any type of ACF field to the block. To find out all the possibilities take a look at the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/StoutLogic/acf-builder/wiki/field-types\"\n  }, \"ACF documentation\"), \".\\nHere you'll find all the different field types and how to use them.\\nBelow is a simple example of what your add_fields() function could look like. \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\"\n  }, \"public function add_fields(): object\\n{\\n   $this->registered_fields\\n      ->addRepeater(\\n         'slides',\\n         [\\n            'layout' => 'block',\\n            'min'    => 1,\\n            'max'    => 4,\\n         ]\\n      )\\n      ->addImage('image', [\\n         'label' => 'Image',\\n         'return_format' => 'id',\\n         'preview_size' => 'medium',\\n      ])\\n      ->addText('caption', [\\n         'label'     => 'Bijschrift',\\n      ])\\n      ->endRepeater();\\n   return $this->registered_fields;\\n}\\n\")), mdx(\"p\", null, \"To learn how to use these fields in your block view, take a look at the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/wp-lemon-docs/blocks/block-view\"\n  }, \"block view documentation\"), \".\"), mdx(\"h2\", {\n    \"id\": \"extending-the-block-context\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#extending-the-block-context\",\n    \"aria-label\": \"extending the block context permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Extending the block context\"), mdx(\"p\", null, \"Every block is different but we will give some common examples on how to expand your block.\"), mdx(\"h3\", {\n    \"id\": \"block-that-displays-an-x-amount-of-customposts\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#block-that-displays-an-x-amount-of-customposts\",\n    \"aria-label\": \"block that displays an x amount of customposts permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Block that displays an x amount of (custom)posts\"), mdx(\"p\", null, \"Take a look at the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"news-recent.php\"), \" block in the parent theme. You will find a method block_context().\\nWhen going through these lines you will find several notable things.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\",\n    \"metastring\": \"lineNumbers=true\",\n    \"lineNumbers\": \"true\"\n  }, \"public function block_context($context): array\\n{\\n   $amount = get_field('amount') ? get_field('amount') : 3;\\n   $items = latest_items_query('news', $amount);\\n   $context['items'] = $items;\\n   $context['card_type'] = 'news';\\n   $context['holder_classes'] = 'col-12 col-md-6 col-lg-4';\\n   $message = __(\\\"You haven't added any news yet, so this block will be empty.\\\", \\\"wp-lemon\\\");\\n\\n   if ($items->found_posts == 0) {\\n      self::add_notification($message, 'warning');\\n   }\\n\\n   return $context;\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"wp-lemon comes with a set of predefined queries. Here we use latest_items_query() to get the latest posts of a specific posttype\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We have a card_type variable that defines what card type will be loaded.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We have a add_notification method that will setup a notification inside the block when previewed in the backend.\")), mdx(\"h3\", {\n    \"id\": \"block-that-displays-a-post-archive-with-load-more-button\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#block-that-displays-a-post-archive-with-load-more-button\",\n    \"aria-label\": \"block that displays a post archive with load more button permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Block that displays a post archive with load more button\"), mdx(\"p\", null, \"Take a look at the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"news-overview.php\"), \" block in the parent theme. You will again find a method block_context() that will query the data from the database and add it to the block context.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\",\n    \"metastring\": \"lineNumbers=true\",\n    \"lineNumbers\": \"true\"\n  }, \"public function block_context($context): array\\n{\\n   $items = archive_query('news', 6); // query the news posttype\\n   $context['items'] = $items;\\n   $context['nav'] = true; // show nav\\n   $context['count'] = get_total_posts('news', count($items)); // get a count array that feeds information to the postholder.\\n   $context['post_type'] = 'news'; // sets post type for the ajax calls.\\n   $context['card_type'] = 'news'; // sets the twig partial to render the actual posts in the loop.\\n   $context['holder_classes'] = 'col-12 col-md-6 col-lg-4'; // holder classes around the cards in the loop.\\n\\n   if (isset($this->fields['show_filter']) && $this->fields['show_filter'] == true) {\\n      $context['show_filter'] = true;\\n      $context['terms'] = get_terms('category', array('hide_empty' => true));\\n   }\\n\\n   // add notification when no posts are found.\\n   if ($items->found_posts == 0) {\\n      self::add_notification(__('You haven\\\\'t added any news yet, so this block will be empty.', 'wp-lemon'), 'warning');\\n   }\\n\\n   return $context;\\n}\\n\")), mdx(\"p\", null, \"The linked \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"blocks/news-overview.twig\"), \" file will include \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"components/archive-loop.twig\"), \" that will display the initial posts and setup everything for receiving new posts via an ajax call.\"), mdx(\"p\", null, \"When reusing above code make sure to:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"set the post type correctly\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"create a new card twig file\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"include the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"components/archive-loop.twig\"), \" inside your twig file that is linked to your block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Update the notice to inform the administrator/editors of the website when no posts are found of the posttype you want to query.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"include the right functions in your file like so\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\",\n    \"metastring\": \"lineNumbers=true\",\n    \"lineNumbers\": \"true\"\n  }, \"namespace WP_Lemon\\\\Child\\\\Blocks;\\n\\nuse HighGround\\\\Bulldozer\\\\BlockRenderer;\\n\\n++ use function WP_Lemon\\\\API\\\\archive_query;\\n++ use function WP_Lemon\\\\API\\\\get_total_posts;\\n\")), mdx(\"h3\", {\n    \"id\": \"block-with-custom-assets\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#block-with-custom-assets\",\n    \"aria-label\": \"block with custom assets permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Block with custom assets\"), mdx(\"p\", null, \"You might want to add a specific asset to the blocks context as it is only used by this specific block. You can use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"asset()\"), \" helper function for that.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\",\n    \"metastring\": \"lineNumbers=true\",\n    \"lineNumbers\": \"true\"\n  }, \"public function block_context($context): array\\n{\\n   // Check if shape exists.\\n   if(true == asset('images/banner.png')->exists()){\\n         // get URL to image/shape\\n         $context['banner_uri'] = asset('images/banner.png')->uri();\\n   }\\n\\n   // get contents of the svg to use directly in to your block.\\n   $context['sphere'] = asset('images/sphere.svg')->contents();\\n\\n   return $context;\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"block-that-needs-conditional-modifier-classes\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#block-that-needs-conditional-modifier-classes\",\n    \"aria-label\": \"block that needs conditional modifier classes permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Block that needs conditional modifier classes\"), mdx(\"p\", null, \"You might want to add conditional classes based on a field setting. This is where \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$this->add_modifier_class('yourmodifier');\"), \" comes in.\\nThis method adds a BEM modifier class to your block. An example:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\",\n    \"metastring\": \"lineNumbers=true\",\n    \"lineNumbers\": \"true\"\n  }, \"public function block_context($context): array\\n{\\n   \\n   if (isset($this->fields['show_pagination']) && true == $this->fields['show_pagination']) {\\n         $context['show_pagination'] = true;\\n         $this->add_modifier_class('has-pagination');\\n   }\\n   \\n   return $context;\\n}\\n\")), mdx(\"p\", null, \"will result in\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-twig\",\n    \"metastring\": \"lineNumbers=true\",\n    \"lineNumbers\": \"true\"\n  }, \"<div class=\\\"acf-block slider slider--has-pagination\\\" id=\\\"block_5f8ffdc0349e1\\\">\\n...\\n</div>\\n\")), mdx(\"h2\", {\n    \"id\": \"wp-lemon-queries\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#wp-lemon-queries\",\n    \"aria-label\": \"wp lemon queries permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Wp-lemon queries\"), mdx(\"p\", null, \"When you want to use post objects within your custom block you can use the following queries in your block context:\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Function\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"latest_items_query\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retrieves the latest posts of a specific type, optionally filtered by taxonomy and terms.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"other_items_query\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Fetches posts of a specific type, excluding a given post, optionally filtered by taxonomy and terms.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"specific_items_query\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retrieves specific posts by their IDs and type.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"archive_query\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Fetches a set of posts of a specific type for archive display, supporting pagination.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"get_total_posts\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Calculates the total number of posts available for an AJAX \\\"load more\\\" functionality.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"adjacent_post_info\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Gets information about the next or previous post, or returns the first/last post if unavailable.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"next_post_info\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns information about the next post or the first post if no next post exists.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"previous_post_info\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns information about the previous post or the last post if no previous post exists.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"taxonomy_post_collection\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retrieves a collection of posts organized by category, based on a taxonomy and post type.\")))));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Anatomy of a block controller"},{"depth":2,"value":"Block content"},{"depth":3,"value":"InnerBlocks"},{"depth":3,"value":"Adding ACF fields to the block"},{"depth":2,"value":"Extending the block context"},{"depth":3,"value":"Block that displays an x amount of (custom)posts"},{"depth":3,"value":"Block that displays a post archive with load more button"},{"depth":3,"value":"Block with custom assets"},{"depth":3,"value":"Block that needs conditional modifier classes"},{"depth":2,"value":"Wp-lemon queries"}]}},"pageContext":{"slug":"/blocks/block-controller/","prev":{"label":"Declaration (json)","link":"/blocks/block-declaration"},"next":{"label":"View (twig)","link":"/blocks/block-view"},"repositoryEditUrl":"https://github.com/Studio-Lemon/wp-lemon-docs/tree/master/src/docs/blocks/block-controller.mdx","repositoryProvider":"GitHub"}},"staticQueryHashes":["1954253342","2328931024","2501019404","973074209"]}