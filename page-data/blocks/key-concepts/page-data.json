{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/blocks/key-concepts","result":{"data":{"mdx":{"id":"817db6e6-5d0f-5ad3-9fed-6ce5eac21fcf","excerpt":"As a block driven theme, wp-lemon is heavily orientated towards using ACF blocks. \nSince blocks are saved within the content area and not in meta, load timesâ€¦","fields":{"slug":"/blocks/key-concepts/"},"frontmatter":{"title":"Key concepts","description":"General introduction to custom blocks and the key concepts.","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Key concepts\",\n  \"description\": \"General introduction to custom blocks and the key concepts.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"As a block driven theme, wp-lemon is heavily orientated towards using ACF blocks.\\nSince blocks are saved within the content area and not in meta, load times will be better and the database will stay smaller.\\nTranslations will also be much easier. \"), mdx(\"p\", null, \"Find out how you can easily create your own block right \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/wp-lemon-docs/blocks/create-block\"\n  }, \"here\"), \".\"), mdx(\"p\", null, \"A block always consists of 5 separate files,\\nthe most important files to understand how a block works are the .json, .php, and .twig files.\\nThese 3 files represent the declaration, controller and view layer of the block.\"), mdx(\"h2\", {\n    \"id\": \"block-declaration\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#block-declaration\",\n    \"aria-label\": \"block declaration permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Block declaration\"), mdx(\"p\", null, \"Your declaration file (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".json\"), \") is where it all starts as this file handles the registration with WordPress.\\nThis file is essential because it registers the block and defines settings,\\nsuch as color and width options, determining what configuration options are available in the WordPress editor.\\nRead more about all the possibilities in your block declaration file right \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/wp-lemon-docs/blocks/block-declaration\"\n  }, \"here\"), \".\"), mdx(\"h2\", {\n    \"id\": \"block-controller\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#block-controller\",\n    \"aria-label\": \"block controller permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Block controller\"), mdx(\"p\", null, \"The controller file (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".php\"), \") is where the block\\u2019s logic is handled.\\nThis is where you process any dynamic data and control how your block behaves based on input from the editor.\\nThe idea is to put all of our logic in here, so that when were working in the view layer,\\nyou only have to focus on creating a beautiful front end.\\nThere is a lot that goes into your controller layer so you'll definitely want to check out our detailed documentation right \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/wp-lemon-docs/blocks/block-controller\"\n  }, \"here\"), \".\"), mdx(\"h2\", {\n    \"id\": \"block-view\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#block-view\",\n    \"aria-label\": \"block view permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Block view\"), mdx(\"p\", null, \"Now that your block is all set up you can start building your front end. This will happen in the view file (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".twig\"), \").\\nThe view file (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".twig\"), \") is responsible for rendering the block's front-end appearance.\\nUsing the data passed from the controller, this template file determines how the block is displayed on the website.\\nBy separating the presentation layer, you can easily customize the block's HTML structure and design without affecting its logic.\\nRead more about the possibilities right \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/wp-lemon-docs/blocks/block-view\"\n  }, \"here\"), \".\"), mdx(\"h2\", {\n    \"id\": \"time-to-get-started\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#time-to-get-started\",\n    \"aria-label\": \"time to get started permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Time to get started\"), mdx(\"p\", null, \"Now that you get the global idea of building blocks in wp-lemon you can easily get started by creating your own block.\\nTo do this just follow the steps described right \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/wp-lemon-docs/blocks/create-block\"\n  }, \"here\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Block declaration"},{"depth":2,"value":"Block controller"},{"depth":2,"value":"Block view"},{"depth":2,"value":"Time to get started"}]}},"pageContext":{"slug":"/blocks/key-concepts/","prev":{"label":"Fonts","link":"/basics/fonts"},"next":{"label":"Create block","link":"/blocks/create-block"},"repositoryEditUrl":"https://github.com/Studio-Lemon/wp-lemon-docs/tree/master/src/docs/blocks/key-concepts.mdx","repositoryProvider":"GitHub"}},"staticQueryHashes":["1954253342","2328931024","2501019404","973074209"]}