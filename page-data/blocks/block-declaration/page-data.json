{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/blocks/block-declaration","result":{"data":{"mdx":{"id":"13f760de-b6f3-5015-a3b1-f9b490cdf1c7","excerpt":"As explained on the Key concepts page, \nYour declaration file ( .json ) is where it all starts as this file handles the registration with WordPress. \nThis fileâ€¦","fields":{"slug":"/blocks/block-declaration/"},"frontmatter":{"title":"Block declaration","description":"General introduction and deep dive into block declarations.","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Block declaration\",\n  \"description\": \"General introduction and deep dive into block declarations.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"As explained on the Key concepts page,\\nYour declaration file (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".json\"), \") is where it all starts as this file handles the registration with WordPress.\\nThis file is essential because it defines all the necessary metadata for the block, including its name, title,\\ndescription, and various configuration options that determine its behavior within the WordPress editor.\"), mdx(\"h2\", {\n    \"id\": \"anatomy-of-a-block-declaration\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#anatomy-of-a-block-declaration\",\n    \"aria-label\": \"anatomy of a block declaration permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Anatomy of a block declaration\"), mdx(\"p\", null, \"Although the declaration file is being generated when creating a new block, it's important to understand the structure of this file.\\nBelow you'll find an example of a block declaration file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n    \\\"$schema\\\": \\\"https://raw.githubusercontent.com/Levdbas/acf-json-schema/main/acf-blocks.json\\\",\\n    \\\"name\\\": \\\"acf/block-slug\\\",\\n    \\\"title\\\": \\\"Block title\\\", \\n    \\\"description\\\": \\\"Block description\\\",\\n    \\\"category\\\": \\\"wp-lemon-blocks\\\",\\n    \\\"icon\\\": \\\"Dashicon\\\",\\n    \\\"keywords\\\": [\\\"keyword\\\", \\\"keyword 2\\\", \\\"keyword 3\\\"],\\n    \\\"apiVersion\\\": 3,\\n    \\\"textdomain\\\": \\\"wp-lemon-child\\\",\\n    \\\"acf\\\": {\\n        \\\"mode\\\": \\\"preview\\\"\\n    },\\n    \\\"supports\\\": {\\n        \\\"align\\\": [\\\"full\\\"],\\n        \\\"color\\\": {\\n            \\\"background\\\": true,\\n            \\\"text\\\": false\\n        }\\n    }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"using-block-supports\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#using-block-supports\",\n    \"aria-label\": \"using block supports permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Using block supports\"), mdx(\"p\", null, \"The support section defines what features are available to the block.\\nFor example, you can enable or disable support for alignment options, color settings, custom classes, and more.\\nThis allows fine-grained control over what functionality the block exposes to users.\"), mdx(\"p\", null, \"When defining this section it's important to think about how much control you want to give to the user.\\nIn most cases you'll want to limit the available options to prevent users from breaking the design of the block.\\nWhile in other cases you might want to give users more control over the block's appearance.\"), mdx(\"p\", null, \"Common examples of support properties you might want to use are \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"align\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"color\"), \".\\nThis way you can enable or disable alignment options and color settings for the block. This will look something like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n    \\\"supports\\\": {\\n        \\\"align\\\": [\\\"full\\\"],\\n        \\\"color\\\": {\\n            \\\"background\\\": true,\\n            \\\"text\\\": false\\n        }\\n    }\\n}\\n\")), mdx(\"p\", null, \"You can find a full list of available support properties in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.wordpress.org/block-editor/reference-guides/block-api/block-supports/\"\n  }, \"wordpress documentation\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Anatomy of a block declaration"},{"depth":2,"value":"Using block supports"}]}},"pageContext":{"slug":"/blocks/block-declaration/","prev":{"label":"Create block","link":"/blocks/create-block"},"next":{"label":"Controller (php)","link":"/blocks/block-controller"},"repositoryEditUrl":"https://github.com/Studio-Lemon/wp-lemon-docs/tree/master/src/docs/blocks/block-declaration.mdx","repositoryProvider":"GitHub"}},"staticQueryHashes":["1954253342","2328931024","2501019404","973074209"]}