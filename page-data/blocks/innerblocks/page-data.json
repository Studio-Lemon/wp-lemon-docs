{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/blocks/innerblocks","result":{"data":{"mdx":{"id":"484602ff-cbee-5c4b-a7f9-0f70e037f4ea","excerpt":"By using  InnerBlocks , you can nest blocks within other blocks.\nThis allows you to create more complex and flexible layouts by placing blocks inside parentâ€¦","fields":{"slug":"/blocks/innerblocks/"},"frontmatter":{"title":"Innerblocks","description":"How to use InnerBlocks in wp-lemon","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Innerblocks\",\n  \"description\": \"How to use InnerBlocks in wp-lemon\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"By using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"InnerBlocks\"), \", you can nest blocks within other blocks.\\nThis allows you to create more complex and flexible layouts by placing blocks inside parent blocks.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note:\"), \"\\nA single block can only contain one \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"InnerBlocks\"), \" component.\")), mdx(\"h2\", {\n    \"id\": \"building-your-template\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#building-your-template\",\n    \"aria-label\": \"building your template permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Building your template\"), mdx(\"p\", null, \"When using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"InnerBlocks\"), \" it's common to create a template for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"InnerBlocks\"), \".\\nThis will prefill the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"InnerBlocks \"), \"component with blocks within the template when inserted and will make it easier to use for you and your clients.\\nIn wp-lemon we do this inside the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HighGround\\\\Bulldozer\\\\AbstractBlockRenderer::block_context\"), \" method.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\"\n  }, \"public function block_context($context): array\\n{\\n    $template = [\\n        [\\n            'core/heading',\\n            [\\n                'placeholder' => __('Add a title', 'wp-lemon-child'),\\n                'level'       => 3,\\n            ],\\n        ],\\n        [\\n            'core/paragraph',\\n            [\\n                'placeholder' => __('Add some text', 'wp-lemon-child'),\\n            ],\\n        ],\\n    ];\\n\\n    $args = [\\n        'InnerBlocks' => self::create_inner_blocks(template: $template),\\n    ];\\n\\n    return array_merge($context, $args);\\n}\\n\")), mdx(\"p\", null, \"In the example above we've used a heading and a paragraph block.\\nOfcourse, you can add other core blocks or even wp-lemon blocks. You can do this like so:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\"\n  }, \"$template = [\\n    ['acf/content-card'],\\n];\\n\")), mdx(\"h2\", {\n    \"id\": \"displaying-your-template\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#displaying-your-template\",\n    \"aria-label\": \"displaying your template permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Displaying your template\"), mdx(\"p\", null, \"Now place the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{{ InnerBlocks }}\"), \" tag in your twig block to see the block inserter in the backend and display the innercontent in the frontend.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-twig\"\n  }, \"{% extends 'layouts/block-wrap.twig' %}\\n\\n{% block block__inner %}\\n    {{ InnerBlocks }}\\n{% endblock %}\\n\")), mdx(\"h2\", {\n    \"id\": \"template-properties\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#template-properties\",\n    \"aria-label\": \"template properties permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Template properties\"), mdx(\"p\", null, \"By adding extra parameters in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"create_inner_blocks\"), \" function we can add some extra functionality.\\nIn the list below you can see each parameter with it's functionality in the right order.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Parameter\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Function\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"$allowed_blocks\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"This parameter allows you to make a selection of blocks that are allowed in the \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"InnerBlocks\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"$template\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"This parameter refers to your innerblocks template\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"$classes\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"This parameter can be used to give custom classnames to your innerblocks container\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"$orientation\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Use this parameters to change the orientation of the arrow to move the child blocks left/right or up down. This is useful in column layouts. Can be \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"horizontal\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"vertical\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"false\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"$templatelock\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"This parameter gives the ability to lock down the template so no changes can be made\")))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note:\"), \"\\nIf a parameter is not given it will default to false.\")), mdx(\"h3\", {\n    \"id\": \"allowed-blocks\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#allowed-blocks\",\n    \"aria-label\": \"allowed blocks permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Allowed blocks\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$allowed_blocks\"), \" parameter allows you to make a selection of blocks that are allowed in the innerblocks.\\nWe used the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"card-grid\"), \" block from wp-lemon as an example.\\nIn this case the we only wanted to allow specific cards we've made.\\nWe did this like so:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\"\n  }, \"public function block_context($context): array\\n{\\n    $template = [\\n        ['acf/content-card'],\\n    ];\\n\\n    $allowed_blocks = ['acf/content-card', 'acf/image-card', 'acf/price-card'];\\n\\n    $args = [\\n        'InnerBlocks' => self::create_inner_blocks(allowed_blocks: $allowed_blocks, template: $template),\\n    ];\\n\\n    return array_merge($context, $args);\\n}\\n\")), mdx(\"p\", null, \"In the example above we've added it as a parameter in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"create_inner_blocks\"), \" function. Note: all wp-lemon blocks that use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"InnerBlocks\"), \" have a filter to expand/tighten the child blocks allowed.\\nYou can find more documentation on this right \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/wp-lemon-docs/extend/hooks#filters-available-php-block-declarations\"\n  }, \"here\"), \".\"), mdx(\"h3\", {\n    \"id\": \"classes\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#classes\",\n    \"aria-label\": \"classes permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Classes\"), mdx(\"p\", null, \"To add custom classes to your innerblocks use the third parameter. You can put all the classnames in a string separated by a space like so:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\"\n  }, \"$args = [\\n    'InnerBlocks' => self::create_inner_blocks(template: $template, classes: 'classname classname'),\\n];\\n\")), mdx(\"h3\", {\n    \"id\": \"orientation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#orientation\",\n    \"aria-label\": \"orientation permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Orientation\"), mdx(\"p\", null, \"Orientation can be used to display the move icons for the child blocks in a left/right or a top/down orientation. This is useful for block layouts were child blocks are next to each other. In that case you would use `horizontal````\"), mdx(\"h3\", {\n    \"id\": \"templatelock\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#templatelock\",\n    \"aria-label\": \"templatelock permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Templatelock\"), mdx(\"p\", null, \"The fifth and last parameter gives the ability to lock down the template. By default this parameter is false,\\nmeaning the template will show in your WordPress editor, but you don't have to stick to it.\\nBy setting it on true you'll lock down the template so no changes can be made. This will look like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\"\n  }, \"$args = [\\n    'InnerBlocks' => self::create_inner_blocks(template: $template, classes: 'classname classname', templatelock: true),\\n];\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Building your template"},{"depth":2,"value":"Displaying your template"},{"depth":2,"value":"Template properties"},{"depth":3,"value":"Allowed blocks"},{"depth":3,"value":"Classes"},{"depth":3,"value":"Orientation"},{"depth":3,"value":"Templatelock"}]}},"pageContext":{"slug":"/blocks/innerblocks/","prev":{"label":"View (twig)","link":"/blocks/block-view"},"next":{"label":"Disabling blocks","link":"/blocks/disabling-blocks"},"repositoryEditUrl":"https://github.com/Studio-Lemon/wp-lemon-docs/tree/master/wp-lemon-docs/src/docs/blocks/innerblocks.mdx","repositoryProvider":"GitHub"}},"staticQueryHashes":["1954253342","2328931024","2501019404","973074209"]}