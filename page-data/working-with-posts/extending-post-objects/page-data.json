{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/working-with-posts/extending-post-objects","result":{"data":{"mdx":{"id":"dfd7852b-981d-51e2-96d2-075862779bc1","excerpt":"In wp-lemon it's possible to extend the post objects to add functionality if needed. \nThis can be very useful when further customizing your site. \nLater on inâ€¦","fields":{"slug":"/working-with-posts/extending-post-objects/"},"frontmatter":{"title":"Extending post objects","description":"Extending post objects in wp-lemon","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Extending post objects\",\n  \"description\": \"Extending post objects in wp-lemon\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In wp-lemon it's possible to extend the post objects to add functionality if needed.\\nThis can be very useful when further customizing your site.\\nLater on in this chapter we'll show you a couple of examples of how you can use this functionality.\"), mdx(\"h2\", {\n    \"id\": \"setting-up\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#setting-up\",\n    \"aria-label\": \"setting up permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Setting up\"), mdx(\"p\", null, \"For the set-up you'll need to do the following:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create a new file in the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/library/controllers/\"), \" directory.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add the new class to the classmap.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Include the file in your functions file.\")), mdx(\"h3\", {\n    \"id\": \"create-new-file\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#create-new-file\",\n    \"aria-label\": \"create new file permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Create new file\"), mdx(\"p\", null, \"Navigate to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/library/controllers/\"), \" directory.\\nHere you can create a new file that extends the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"LemonPost\"), \" class. This will look something like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\"\n  }, \"\\n<?php\\n\\n/**\\n * Setup an extended post query class.\\n * Used for post_type_name\\n *\\n * @package WordPress\\n * @subpackage WP_Lemon\\\\Child\\n */\\n\\nnamespace WP_Lemon\\\\Child\\\\Classes;\\n\\nuse WP_Lemon\\\\Classes\\\\LemonPost;\\nuse Timber\\\\Timber;\\n\\nclass post_type_name extends LemonPost\\n{\\n   private mixed $_example = null;\\n\\n   public function get_example(): array|null\\n   {\\n      if (!is_null($this->_example)) {\\n         return $this->_example;\\n      }\\n\\n      return $this->_example;\\n   }\\n}\\n\\n\")), mdx(\"h3\", {\n    \"id\": \"add-to-classmap\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#add-to-classmap\",\n    \"aria-label\": \"add to classmap permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Add to classmap\"), mdx(\"p\", null, \"After you've created this file you'll need to add it to the classmap, this needs to be done so that Timber knows where to find the new class.\\nYou should do this inside the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/library\"), \" directory.\\nIn essence you could place it anywhere like in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hooks.php\"), \" file but we prever to place it in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"child-setup.php\"), \" file since it's part of the setup process.\\nThis will look something like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\"\n  }, \"\\nadd_filter(\\n    'timber/post/classmap',\\n    function ($classmap) {\\n        $custom_classmap = [\\n            'person'         => Person::class,\\n            'publication'    => Publication::class,\\n            'project'        => Project::class,\\n            'lectorate'      => Lectorate::class,\\n            'news'           => News::class,\\n            'post-education' => PostEduction::class,\\n            'education'      => Education::class,\\n        ];\\n\\n        return array_merge($classmap, $custom_classmap);\\n    }\\n);\\n\\n\")), mdx(\"h3\", {\n    \"id\": \"include-the-file\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#include-the-file\",\n    \"aria-label\": \"include the file permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Include the file\"), mdx(\"p\", null, \"Then last but not least you'll have to include the file so that it gets loaded when the theme is loaded.\\nNavigate to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"functions.php\"), \" file in the root of your theme.\\nHere you can include the file like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\"\n  }, \"\\nfunction parent_loaded()\\n{\\n    $autoloader = new Autoloader();\\n    $autoloader->child(['models']); // order in which our folders get autoloaded.\\n    $autoloader->child_blocks();\\n\\n    $includes = [\\n        'library/classes/class-child-site.php',\\n        'library/classes/class-news-object.php',\\n        'library/classes/YOUR-NEW-CLASS-FILE.php',\\n        'library/child-setup.php',\\n        'library/hooks.php',\\n    ];\\n\\n    foreach ($includes as $file) {\\n        $filepath = locate_template($file);\\n        if (!$filepath) {\\n            /* translators: %s: file to include */\\n            Bulldozer::frontend_error(sprintf(__('Error locating %s for inclusion', 'wp-lemon'), $file));\\n        }\\n        require_once $filepath;\\n    }\\n    unset($file, $filepath);\\n\\n    new WP_Lemon_Child_Site();\\n}\\nadd_action('parent_loaded', __NAMESPACE__ . '\\\\\\\\parent_loaded');\\n\\n\")), mdx(\"h2\", {\n    \"id\": \"examples\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#examples\",\n    \"aria-label\": \"examples permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Examples\"), mdx(\"p\", null, \"Below you can see a couple simple examples that you could use in your extended post object,\\nand also how you can then use it in your front-end. \"), mdx(\"h3\", {\n    \"id\": \"example-1\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#example-1\",\n    \"aria-label\": \"example 1 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Example 1\"), mdx(\"p\", null, \"Below you'll find a simple example of a function that calculates the reading time of a post.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\"\n  }, \"\\n/**\\n * Calculate the reading time of the post.\\n *\\n * @return string\\n */\\npublic function reading_time(): string\\n{\\n    $words_per_minute = 228;\\n\\n    $words = str_word_count(wp_strip_all_tags($this->content()));\\n\\n    if ($words / $words_per_minute < 1) {\\n        return __('< 1 minute', 'wp-lemon-child');\\n    }\\n\\n    $minutes = round($words / $words_per_minute);\\n\\n    /* translators: %s: Time duration in minute or minutes. */\\n    return sprintf(_n('%s minute', '%s minutes', $minutes, 'wp-lemon-child'), (int) $minutes);\\n}\\n\\n\")), mdx(\"p\", null, \"This newly created function can be used in your single page for example like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"\\n{% block content %}\\n    <header class=\\\"section\\\">\\n        <div class=\\\"entry__header-top\\\">\\n            <div class=\\\"readingtime\\\">\\n                <i class=\\\"icon-clock-o\\\"></i>\\n                {{ post.reading_time }}\\n            </div>\\n        </div>\\n        <h1>{{ post.title }}</h1>\\n    </header>\\n    {{ post.content }}\\n{% endblock %}\\n\\n\")), mdx(\"h3\", {\n    \"id\": \"example-2\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#example-2\",\n    \"aria-label\": \"example 2 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Example 2\"), mdx(\"p\", null, \"In this example the name of a person needed to be formatted in a certain way, ofc we could've also done it in the front-end\\nbut we believe that it's best to let the back-end handle most of the logic.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\"\n  }, \"\\n    /**\\n     * Fetch the full name of the person, including title.\\n     *\\n     * @return string\\n     */\\n    public function get_full_name(): string\\n    {\\n        if (!is_null($this->_full_name)) {\\n            return $this->_full_name;\\n        }\\n        $name = null;\\n\\n        $names_group = $this->meta('names');\\n\\n        $name .= $names_group['title'] ? $names_group['title'] . ' ' : '';\\n        $name .= $names_group['first_name'] ? $names_group['first_name'] . ' ' : '';\\n        $name .= $names_group['last_name'] ? $names_group['last_name'] : '';\\n\\n        $this->_full_name = $name;\\n\\n        return $this->_full_name;\\n    }\\n\\n\")), mdx(\"h2\", {\n    \"id\": \"wp-lemon-queries\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#wp-lemon-queries\",\n    \"aria-label\": \"wp lemon queries permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Wp-lemon queries\"), mdx(\"p\", null, \"In wp-lemon we've added a set of predefined queries that you can use to fetch posts. You could use these for example in your block context.\\nFor more documentation on how to use them within your block context take a look at the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/wp-lemon-docs/blocks/block-controller\"\n  }, \"block context documentation\"), \".\\nBelow you can find a list of all the queries that are available in wp-lemon.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Function\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"latest_items_query\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retrieves the latest posts of a specific type, optionally filtered by taxonomy and terms.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"other_items_query\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Fetches posts of a specific type, excluding a given post, optionally filtered by taxonomy and terms.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"specific_items_query\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retrieves specific posts by their IDs and type.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"archive_query\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Fetches a set of posts of a specific type for archive display, supporting pagination.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"get_total_posts\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Calculates the total number of posts available for an AJAX \\\"load more\\\" functionality.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"adjacent_post_info\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Gets information about the next or previous post, or returns the first/last post if unavailable.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"next_post_info\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns information about the next post or the first post if no next post exists.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"previous_post_info\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Returns information about the previous post or the last post if no previous post exists.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"taxonomy_post_collection\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Retrieves a collection of posts organized by category, based on a taxonomy and post type.\")))));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Setting up"},{"depth":3,"value":"Create new file"},{"depth":3,"value":"Add to classmap"},{"depth":3,"value":"Include the file"},{"depth":2,"value":"Examples"},{"depth":3,"value":"Example 1"},{"depth":3,"value":"Example 2"},{"depth":2,"value":"Wp-lemon queries"}]}},"pageContext":{"slug":"/working-with-posts/extending-post-objects/","prev":{"label":"Post type registration (model)","link":"/working-with-posts/post-type-registration"},"next":{"label":"Using Post objects (view)","link":"/working-with-posts/using-post-objects"},"repositoryEditUrl":"https://github.com/Studio-Lemon/wp-lemon-docs/tree/master/wp-lemon-docs/src/docs/working-with-posts/extending-post-objects.mdx","repositoryProvider":"GitHub"}},"staticQueryHashes":["1954253342","2328931024","2501019404","973074209"]}